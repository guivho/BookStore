@page "/login"


@inject IAuthenticationRepository _authenticationRepository
@inject NavigationManager _navigationManager


<div class="card">
    @if (!loggedIn)
    {
            <FailedAlert Message="Something went wrong with the login." />
    }
    <div class="card-body">
    <h5 class="card-title">Please Login</h5>
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email address</label>
            <InputText Id="email" class="form-control" @bind-Value="loginModel.EmailAddress" />
            <ValidationMessage For="@(() => loginModel.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control"
                       @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
    </div>
</div>


@code {
    private LoginModel loginModel = new LoginModel();
    private bool loggedIn = true;

    private async Task HandleLogin()
    {
        loggedIn = await _authenticationRepository.Login(loginModel);
        if (loggedIn)
        {
            _navigationManager.NavigateTo("/");
        }
    }
}
