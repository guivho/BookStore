@page "/books/view/{Id}"
@attribute [Authorize]
@*@inject NavigationManager _navigationManager*@
@inject IBookRepository _bookRepository

<h5 class="card-title">View Book Details</h5>

@if (string.IsNullOrWhiteSpace(Id) || int.Parse(Id) < 1)
{
    <ErrorMessage Message="Invalid selection. Please try again." />
}
else if (Book == null)
{
    <LoadingMessage Message="Loading Book Details" />
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@Book.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Author</strong>
                    </td>
                    <td>
                        @if (Book.Author != null)
                        {
                            <a href="/authors/view/@Book.AuthorId">
                                @Book.Author.Firstname @Book.Author.Lastname
                            </a>
                        }
                        else
                        {
                            <span class="text-muted">No author specified</span>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@Book.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Published</strong>
                    </td>
                    <td>@Book.Year</td>
                </tr>
                <tr>
                    <td>
                        <strong>ISBN</strong>
                    </td>
                    <td>@Book.Isbn</td>
                </tr>
            </table>
        </div>
        <div class="col-4">
            <img src="uploads/@Book.Image" style="height:300px;width:300px" />
            <h3 class="text-center text-info">@string.Format("{0:C}", @Book.Price)</h3>
        </div>
    </div>
}
<BackToList TargetUrl="/books/" Message="Back to Books list." />


@code {
    [Parameter]
    public string Id { get; set; }

    private Book Book = null;

    protected async override Task OnInitializedAsync()
    {
        int id = 0;
        if (int.TryParse(Id, out id))
        {
            Book = await _bookRepository.Get(Endpoints.BooksEndpoint, id);
        }
    }
}