@page "/authors/"
@*
    @inject IAuthenticationRepository _authenticationRepository
    @inject NavigationManager _navigationManager
*@

@inject IAuthorRepository _authorRepository
<h3>Index</h3>

@if (Authors == null)
{
    <div class="alert alert-dismissible alert-secondary">
        Loading Data...
    </div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.Firstname</td>
                    <td>@author.Lastname</td>
                    <td>
                        <a href="/Authors/view/@author.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <a class="btn btn-danger">
                            <span class="oi oi-delete"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IList<Author> Authors;

    protected async override Task OnInitializedAsync()
    {
        Authors = await _authorRepository.Get(Endpoints.AuthorsEndpoint);
    }

}
